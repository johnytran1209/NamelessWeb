@model NamelessWeb.Views.ViewModels.GuitarViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@Model.Heading</h2>
@using (Html.BeginForm(Model.Action,"Guitar"))
{
    
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-horizontal">
        <h4>GuitarViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GuitarId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GuitarId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GuitarId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GuitarModel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GuitarModel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GuitarModel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.BrandId, new SelectList(Model.BrandIds, "BrandId", "BrandName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.BrandId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TypeId, new SelectList(Model.TypeIds, "TypeId", "TypeName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Top, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Top, new SelectList(Model.Tops, "TopId", "TopName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Top)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Side, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Side, new SelectList(Model.Sides, "SideId", "SideName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Side)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Back, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Back, new SelectList(Model.Backs, "BackId", "BackName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Back)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Neck, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(m => m.Neck, new SelectList(Model.Necks, "NeckId", "NeckName"), new { @class = "form-control" })
               @Html.ValidationMessageFor(m => m.Neck)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Fing, new SelectList(Model.Fings, "FingId", "FingName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Fing)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Insurance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Insurance, new SelectList(Model.Insurances, "WarrId", "WarrLength"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Insurance)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Electricfied, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.RadioButtonFor(m => m.Electricfied, new { @class = "form-control" }) yes
               @Html.RadioButtonFor(m => m.Electricfied, new { @class = "form-control" }) no
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ImageLink, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval") ;
}













