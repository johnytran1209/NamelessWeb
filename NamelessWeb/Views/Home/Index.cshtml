@model IEnumerable<NamelessWeb.Models.Guitar.Guitars>
@{
    ViewBag.Title = "Home Page";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        ul.products li {
            width: 200px;
            display: inline-block ;
            vertical-align: top;
            padding-right: 4px;
        }
        .mySlides {
            display: none
        }

        /* Slideshow container */
        .slideshow-container {
            max-width: 1000px;
            position: relative;
            margin: auto;
        }

        /* Next & previous buttons */
        .prev, .next {
            cursor: pointer;
            position: absolute;
            top: 50%;
            width: auto;
            padding: 20px;
            margin-top: -22px;
            color: dimgrey;
            font-weight: bold;
            font-size: 18px;
            transition: 0.6s ease;
            border-radius: 0 3px 3px 0;
        }

        /* Position the "next button" to the right */
        .next {
            right: 0;
            border-radius: 3px 0 0 3px;
        }

            /* On hover, add a black background color with a little bit see-through */
            .prev:hover, .next:hover {
                background-color: rgba(0,0,0,0.8);
            }

        /* Caption text */
        .text {
            color: #f2f2f2;
            font-size: 15px;
            padding: 8px 12px;
            position: absolute;
            bottom: 8px;
            width: 100%;
            text-align: center;
        }

        /* Number text (1/3 etc) */
        .numbertext {
            color: #f2f2f2;
            font-size: 12px;
            padding: 8px 12px;
            position: absolute;
            top: 0;
        }

        /* The dots/bullets/indicators */
        .dot {
            cursor: pointer;
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: #bbb;
            border-radius: 50%;
            display: inline-block;
            transition: background-color 0.6s ease;
        }

            .active, .dot:hover {
                background-color: #717171;
            }

        /* Fading animation */
        .fade {
            -webkit-animation-name: fade;
            -webkit-animation-duration: 3.0s;
            animation-name: fade;
            animation-duration: 3.0s;
        }
    </style>
</head>
<body>
    <p style="height:10px"></p>
    <div class="slideshow-container" style="position:center">
        <div class="mySlides fade" style="position:center">
            <div class="numbertext">1 / 3</div>
            <img src="~/Content/Img/slides/fg151.jpg" style="width:1000px">
            <div class="text">Yamaha FG151</div>
        </div>

        <div class="mySlides fade" style="position:center">
            <div class="numbertext">2 / 3</div>
            <img src="~/Content/Img/slides/fg200j.jpg" style="width:1000px">
            <div class="text">Yamaha FG200J</div>
        </div>

        <div class="mySlides fade" style="position:center">
            <div class="numbertext">3 / 3</div>
            <img src="~/Content/Img/slides/morrisDove.jpg" style="width:1000px">
            <div class="text">Morris Dove</div>
        </div>

        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
        <a class="next" onclick="plusSlides(1)">&#10095;</a>
    </div>
    <br>

    <div style="text-align:center">
        <span class="dot" onclick="currentSlide(1)"></span>
        <span class="dot" onclick="currentSlide(2)"></span>
        <span class="dot" onclick="currentSlide(3)"></span>
    </div>

    <script>
        var slideIndex = 0;
        showSlides();

        function showSlides() {
            var i;
            var slides = document.getElementsByClassName("mySlides");
            var dots = document.getElementsByClassName("dot");
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            slideIndex++;
            if (slideIndex > slides.length) { slideIndex = 1 }
            for (i = 0; i < dots.length; i++) {
                dots[i].className = dots[i].className.replace(" active", "");
            }
            slides[slideIndex - 1].style.display = "block";
            dots[slideIndex - 1].className += " active";
            setTimeout(showSlides, 3000); // Change image every 2 seconds
        }
    </script>
    <div class="container">
        <div class="card">
            <div class="container-fliud">
                <div class="container body-content">
                    <hr />
                    <div style=" font-size:25px">@Html.ActionLink("Inventory", "Inventory", "Guitar")</div>
                    <hr />
                    @*<a style="color:aliceblue">Morris</a>
                        <hr />
                        <a style="color:aliceblue">Yamaha</a>
                        <hr />
                        <a style="color:aliceblue">Others</a>*@
                    <ul class="products">
                        
                        @foreach (var item in Model.Where(c => c.Availability == 0).Take(8))
                        {   
                            if (item.Availability == 0)
                            {
                                <li>

                                            <a href="@Url.Action("Details","Guitar",new {id=item.GuitarId})" , style="height:200px;">
                                                @if (item.ImageLink1 != "")
                                                {
                                                    <img src="@Url.Content(item.ImageLink1)" style="max-width: 200px; max-height: 200px;">
                                                }
                                                <div style="max-width:300px;">
                                                    @Html.DisplayFor(modelItem => item.MDL)
                                                </div>
                                            </a>

                                </li>
                            }
                        }    
                    </ul>
                    <a href="~/Guitar/Inventory" class="navbar-right"right:auto;">See more...</a>
                    <hr />
                    <hr />
                    <div style=" font-size:25px">@Html.ActionLink("Sold", "Sold", "Guitar")</div>
                    <hr />                    
                    <ul class="products">
                        @foreach (var item in Model.Where(c => c.Availability == 2).Take(8))
                        {
                                <li>
                                    
                                            <a href="@Url.Action("Details","Guitar",new {id=item.GuitarId})" , style="height:200px;">
                                                @if (item.ImageLink1 != null)
                                                {
                                                    <img src="@Url.Content(item.ImageLink1)" style="max-width: 200px; max-height: 200px;">
                                                    
                                                }
                                                <div style="max-width:300px;">
                                                    @Html.DisplayFor(modelItem => item.MDL)
                                                </div>
                                                
                                            </a>
                                        
                                </li>
                        } 
                    </ul>
                    <a href="~/Guitar/Sold" class="navbar-right"right:auto;">See more...</a>
                </div>

            </div>
        </div>
    </div>
</body>
</html>
